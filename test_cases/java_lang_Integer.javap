Compiled from "Integer.java"
public final class java.lang.Integer extends java.lang.Number implements java.lang.Comparable<java.lang.Integer> {
  public static final int MIN_VALUE;
    Signature: I
  public static final int MAX_VALUE;
    Signature: I
  public static final java.lang.Class<java.lang.Integer> TYPE;
    Signature: Ljava/lang/Class;
  public static final int SIZE;
    Signature: I
  public static java.lang.String toString(int, int);
    Signature: (II)Ljava/lang/String;

  public static java.lang.String toHexString(int);
    Signature: (I)Ljava/lang/String;

  public static java.lang.String toOctalString(int);
    Signature: (I)Ljava/lang/String;

  public static java.lang.String toBinaryString(int);
    Signature: (I)Ljava/lang/String;

  public static java.lang.String toString(int);
    Signature: (I)Ljava/lang/String;

  public static int parseInt(java.lang.String, int) throws java.lang.NumberFormatException;
    Signature: (Ljava/lang/String;I)I

  public static int parseInt(java.lang.String) throws java.lang.NumberFormatException;
    Signature: (Ljava/lang/String;)I

  public static java.lang.Integer valueOf(java.lang.String, int) throws java.lang.NumberFormatException;
    Signature: (Ljava/lang/String;I)Ljava/lang/Integer;

  public static java.lang.Integer valueOf(java.lang.String) throws java.lang.NumberFormatException;
    Signature: (Ljava/lang/String;)Ljava/lang/Integer;

  public static java.lang.Integer valueOf(int);
    Signature: (I)Ljava/lang/Integer;

  public java.lang.Integer(int);
    Signature: (I)V

  public java.lang.Integer(java.lang.String) throws java.lang.NumberFormatException;
    Signature: (Ljava/lang/String;)V

  public byte byteValue();
    Signature: ()B

  public short shortValue();
    Signature: ()S

  public int intValue();
    Signature: ()I

  public long longValue();
    Signature: ()J

  public float floatValue();
    Signature: ()F

  public double doubleValue();
    Signature: ()D

  public java.lang.String toString();
    Signature: ()Ljava/lang/String;

  public int hashCode();
    Signature: ()I

  public boolean equals(java.lang.Object);
    Signature: (Ljava/lang/Object;)Z

  public static java.lang.Integer getInteger(java.lang.String);
    Signature: (Ljava/lang/String;)Ljava/lang/Integer;

  public static java.lang.Integer getInteger(java.lang.String, int);
    Signature: (Ljava/lang/String;I)Ljava/lang/Integer;

  public static java.lang.Integer getInteger(java.lang.String, java.lang.Integer);
    Signature: (Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;

  public static java.lang.Integer decode(java.lang.String) throws java.lang.NumberFormatException;
    Signature: (Ljava/lang/String;)Ljava/lang/Integer;

  public int compareTo(java.lang.Integer);
    Signature: (Ljava/lang/Integer;)I

  public static int compare(int, int);
    Signature: (II)I

  public static int highestOneBit(int);
    Signature: (I)I

  public static int lowestOneBit(int);
    Signature: (I)I

  public static int numberOfLeadingZeros(int);
    Signature: (I)I

  public static int numberOfTrailingZeros(int);
    Signature: (I)I

  public static int bitCount(int);
    Signature: (I)I

  public static int rotateLeft(int, int);
    Signature: (II)I

  public static int rotateRight(int, int);
    Signature: (II)I

  public static int reverse(int);
    Signature: (I)I

  public static int signum(int);
    Signature: (I)I

  public static int reverseBytes(int);
    Signature: (I)I

  public int compareTo(java.lang.Object);
    Signature: (Ljava/lang/Object;)I
}
